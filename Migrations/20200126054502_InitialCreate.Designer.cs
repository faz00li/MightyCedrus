// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MightyCedrus.Data;

namespace MightyCedrus.Migrations
{
    [DbContext(typeof(MightyCedrusContext))]
    [Migration("20200126054502_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("MightyCedrus.Models.Concert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Date")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("VenueName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Concerts");
                });

            modelBuilder.Entity("MightyCedrus.Models.Performer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ConcertId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Payout")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConcertId");

                    b.ToTable("Performers");
                });

            modelBuilder.Entity("MightyCedrus.Models.Venue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ConcertId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("VenueName")
                        .HasColumnType("TEXT");

                    b.Property<int>("VenueNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VenueURL")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConcertId");

                    b.ToTable("Venues");
                });

            modelBuilder.Entity("MightyCedrus.Models.Performer", b =>
                {
                    b.HasOne("MightyCedrus.Models.Concert", null)
                        .WithMany("Performers")
                        .HasForeignKey("ConcertId");
                });

            modelBuilder.Entity("MightyCedrus.Models.Venue", b =>
                {
                    b.HasOne("MightyCedrus.Models.Concert", null)
                        .WithMany("Venues")
                        .HasForeignKey("ConcertId");
                });
#pragma warning restore 612, 618
        }
    }
}
